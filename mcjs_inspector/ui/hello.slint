import { Button, VerticalBox , TabWidget, HorizontalBox, ListView } from "std-widgets.slint";

export enum VMState {
    initial,
    running,
    suspended,
}

export struct HistoryItem {
    id: string,
    description: string,
}


export component HelloWorld inherits Window {
    in property<VMState> vm-state;
    callback quit;
    callback start;

    VerticalBox {
        HorizontalBox {
            Text {
                text: 
                    root.vm-state == VMState.initial ? "VM is ready to start"
                    : root.vm-state == VMState.running ? "VM running..."
                    : root.vm-state == VMState.suspended ? "VM is supended"
                    : "VM is ...?";
                font-size: 16pt;
                horizontal-alignment: left;
            }
            Button {
                text: "Start";
                enabled: vm-state == VMState.initial;
                clicked => { root.start(); }
            }
        }

        TabWidget { 
            Tab {
                title: "Case details";

                GridLayout {
                    vertical-stretch: 1;
                    spacing: 5mm;

                    Row {
                        Text {
                            text: "Execution root";
                            vertical-alignment: top;
                            vertical-stretch: 0;
                            horizontal-alignment: right;
                            horizontal-stretch: 0;
                        }
                        Text {
                            text: "<exec root here>";
                            vertical-alignment: top;
                            vertical-stretch: 0;
                        }
                    } 
                    Row {
                        Text {
                            text: "Include paths";
                            vertical-alignment: top;
                            vertical-stretch: 0;
                            horizontal-alignment: right;
                            horizontal-stretch: 0;
                        }
                        Text {
                            text: "<include paths here>";
                            vertical-alignment: top;
                            vertical-stretch: 0;
                        }
                    }
                    Row { 
                        Text {
                            vertical-stretch: 1;
                        }
                    }
                 }
            }

            Tab {
                title: "VM state";
                HorizontalBox {
                    ListView {
                        in property<[HistoryItem]> history;
                        for item in history: HorizontalBox {
                            Text { text: item.id; }
                            Text { text: item.description; }
                        }
                    }
                }
            }
        }
    }
}
