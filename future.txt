
- The code is currently in *dire* need of clean up (clippy?)

- Inspector
	= a tool for visualizing the interpreter's execution,
	in order to speed up the initial part of debugging:
		- figuring out "the hell is going on"
		- forming well informed hypotheses, to be investigated and
		  potentially turned into fixes via the debugger, extra
		  asserts, etc.
	
	- Workflow:
		(for now, just a hypothesis)
		
		> I run a test case
		> it panics
		> it exports a file detailing the "case" for the "inspector"
		> it also prints a command line to start the inspector with that case file

		> I run that command
		> the inspector starts up
		> it runs the interpreter, building a map of the executed instructions
		
		* Here, I think I will have to distinguish two parts to the collected and visualized data:
			- overview = data collected during the first
			  in-inspector run.  Level of detail is low to mid, but
			  enough for the user to have an idea of how the
			  program is running

			- snapshots = extra data, associated to specific
			  instant of the execution.  very high level of detail.
			  only produced on demand (it would be too much data to
			  collect at every execution step)

		> I can click on an instruction step, and take an extra snapshot if I want more detail


